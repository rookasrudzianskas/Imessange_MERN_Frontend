{"ast":null,"code":"var _jsxFileName = \"/Users/rookasrudzianskas/Documents/React/REACT_IMESSAGE_MERN/Imessage-frontend/src/Chat.js\";\nimport { IconButton } from \"@material-ui/core\";\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Chat.css\";\nimport { selectChatId, selectChatName } from \"./features/chatSlice\";\nimport db from \"./firebase\";\nimport Message from \"./Message\";\nimport firebase from \"firebase\";\nimport { selectUser } from \"./features/userSlice\";\nimport FlipMove from \"react-flip-move\";\nimport axios from \"./axios\";\nimport Pusher from \"pusher-js\";\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState(\"\");\n  const chatName = useSelector(selectChatName);\n  const chatId = useSelector(selectChatId);\n  const [messages, setMessages] = useState([]);\n\n  const getConversation = chatId => {\n    if (chatId) {\n      // this gets the messsages in the chat id\n      axios.get(`/get/conversation?id=${chatId}`).then(res => {\n        setMessages(res.data[0].conversation); // gets the messages\n      });\n    }\n  };\n\n  useEffect(() => {\n    pusher.unsubscribe('messages');\n    getConversation(chatId);\n    const channel = pusher.subscribe('messages');\n    channel.bind('newMessage', function (data) {\n      getConversation(chatId);\n    });\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    axios.post(`/new/message?id=${chatId}`, {\n      message: input,\n      timestamp: Date.now(),\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"To: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"chat__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, chatName)), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Details\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlipMove, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, messages.map(({\n    user,\n    _id,\n    message,\n    timestamp\n  }) => /*#__PURE__*/React.createElement(Message, {\n    key: _id,\n    id: _id,\n    sender: user,\n    message: message,\n    timestamp: timestamp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"iMessage\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MicNoneIcon, {\n    className: \"chat__mic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/rookasrudzianskas/Documents/React/REACT_IMESSAGE_MERN/Imessage-frontend/src/Chat.js"],"names":["IconButton","MicNoneIcon","React","useEffect","useState","useSelector","selectChatId","selectChatName","db","Message","firebase","selectUser","FlipMove","axios","Pusher","Chat","user","input","setInput","chatName","chatId","messages","setMessages","getConversation","get","then","res","data","conversation","pusher","unsubscribe","channel","subscribe","bind","sendMessage","e","preventDefault","post","message","timestamp","Date","now","map","_id","target","value"],"mappings":"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","sourcesContent":["import { IconButton } from \"@material-ui/core\";\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Chat.css\";\nimport { selectChatId, selectChatName } from \"./features/chatSlice\";\nimport db from \"./firebase\";\nimport Message from \"./Message\";\nimport firebase from \"firebase\";\nimport { selectUser } from \"./features/userSlice\";\nimport FlipMove from \"react-flip-move\";\nimport axios from \"./axios\";\nimport Pusher from \"pusher-js\";\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState(\"\");\n  const chatName = useSelector(selectChatName);\n  const chatId = useSelector(selectChatId);\n  const [messages, setMessages] = useState([]);\n\n  const getConversation = (chatId) => {\n    if (chatId) {\n      // this gets the messsages in the chat id\n      axios.get(`/get/conversation?id=${chatId}`).then((res) => {\n        setMessages(res.data[0].conversation);\n        // gets the messages\n      })\n    }\n  }\n\n  useEffect(() => {\n\n    pusher.unsubscribe('messages');\n\n    getConversation(chatId);\n\n    const channel = pusher.subscribe('messages');\n    channel.bind('newMessage', function (data) {\n      getConversation(chatId);\n    });\n  }, [chatId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    axios.post(`/new/message?id=${chatId}`, {\n      message: input,\n      timestamp: Date.now(),\n      user: user,\n    })\n\n    setInput(\"\");\n\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <h4>\n          To: <span className=\"chat__name\">{chatName}</span>\n        </h4>\n        <strong>Details</strong>\n      </div>\n\n      {/* chat messages */}\n      <div className=\"chat__messages\">\n        <FlipMove>\n          {messages.map(({ user, _id, message, timestamp}) => (\n              <Message key={_id} id={_id} sender={user} message={message} timestamp={timestamp} />\n          ))}\n        </FlipMove>\n      </div>\n\n      <div className=\"chat__input\">\n        <form>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"iMessage\"\n            type=\"text\"\n          />\n          <button onClick={sendMessage}>Send Message</button>\n        </form>\n\n        <IconButton>\n          <MicNoneIcon className=\"chat__mic\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}